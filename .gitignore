import wikipedia
import telebot

bot = telebot.TeleBot('Token')

page_list = []  # список найденных страниц

@bot.message_handler(commands=['start'])
def start(message):
    sending_mess = f"<b>Привет, {message.from_user.first_name}!</b>\nЧтобы начать поиск, введите /search и слово, которое хотите найти, и язык в формате 'en', 'ru' и т.д., например:\n/search cat en"
    bot.send_message(message.chat.id, sending_mess, parse_mode='html')

@bot.message_handler(commands=['search'])
def search(message):
    global page_list
    args = message.text.split()[1:]
    if len(args) < 2:
        bot.send_message(message.chat.id, 'Введите слово и язык в формате /search слово язык')
        return
    word = args[0].strip().lower()
    lang = args[1].strip().lower()
    wikipedia.set_lang(lang)
    try:
        page_list = wikipedia.search(word)
        if len(page_list) > 1:
            sending_mess = "Выберите статью:"
            keyboard = telebot.types.InlineKeyboardMarkup()
            for i, title in enumerate(page_list[:5]):
                button = telebot.types.InlineKeyboardButton(text=title, callback_data=f'summary {i}')
                keyboard.add(button)
            bot.send_message(message.chat.id, sending_mess, reply_markup=keyboard)
        elif len(page_list) == 1:
            final_message = wikipedia.summary(page_list[0])
            bot.send_message(message.chat.id, final_message, parse_mode='html')
        else:
            bot.send_message(message.chat.id, 'По вашему запросу ничего не найдено')
    except wikipedia.exceptions.PageError:
        bot.send_message(message.chat.id, 'Страница не найдена')
    except wikipedia.exceptions.DisambiguationError as e:
        page_list = e.options[:5]
        sending_mess = "Выберите статью:"
        keyboard = telebot.types.InlineKeyboardMarkup()
        for i, option in enumerate(page_list):
            button = telebot.types.InlineKeyboardButton(text=option, callback_data=f'summary {i}')
            keyboard.add(button)
        bot.send_message(message.chat.id, sending_mess, reply_markup=keyboard)

@bot.message_handler(commands=['random'])
def random_article(message):
    lang = wikipedia.languages()[0]
    wikipedia.set_lang(lang)
    random_page = wikipedia.random()
    final_message = wikipedia.summary(random_page)
    bot.send_message(message.chat.id, final_message, parse_mode='html')

@bot.callback_query_handler(func=lambda call: call.data.startswith('summary'))
def callback_handler(call):
    global page_list
    _, idx = call.data.split()
    idx = int(idx)
    try:
        final_message = wikipedia.summary(page_list[idx])
    except (IndexError, NameError):
        final_message = 'Что-то пошло не так, попробуйте снова'
    bot.send_message(call.message.chat.id, final_message, parse_mode='html')
    bot.answer_callback_query(call)
bot.polling(none_stop=True)
